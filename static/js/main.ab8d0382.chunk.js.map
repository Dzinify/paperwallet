{"version":3,"sources":["content.js","components/title/index.js","components/intro/index.js","lib/mnemonic/isInMnemonic.js","lib/mnemonic/index.js","lib/seedHelpers.js","lib/classNames.js","utils/gtag.js","components/caption/index.js","components/seedContainer/index.js","components/pagesSelect/index.js","lib/copyToClipboard.js","components/copyButton/index.js","components/page/index.js","components/button/index.js","components/splittedSeed/index.js","lib/lazyScroll.js","components/svg/Svg.js","components/restoreSeed/index.js","components/seedConstructor/index.js","components/footer/index.js","components/faq/index.js","lib/toCapitalizeCase.js","components/print/index.js","App.js","registerServiceWorker.js","index.js"],"names":["content","title","links","faq","termsAndConditions","pages","index","description","restore","intro","readMore","placeholder","validText","invalidSeed","copyright","pagesToGenerateLabel","generatedPagesLabel","pagesToGenerateCaption","pagesToRecoverLabel","pagesToRecoverCaption","wordsCountCaption","word","words","totalWordsLabel","clear","autoGenerate","toRecoverYourSeedPhrase","page","goTo","doItManually","yourSeed","enterSeedWords","languageErrorText","lengthErrorText","wrongNumberOfWordsErrorText","notEnoughWordsErrorText","mistakesOnCardErrorText","Title","react_default","a","createElement","className","Link","to","mnemonicAsObject","mnemonic","reduce","acc","item","isInMnemonic","undefined","WORDS_COUNT_ALLOWED","ENGLISH_ERROR_TEXT","LENGTH_ERROR_TEXT","PAGE_ERROR_TEXT","MISTAKES_ON_CARD_ERROR_TEXT","getEmptyArray","size","Array","from","checkSeed","seed","bip39","validateMnemonic","getRandomSeed","generateMnemonic","getWordsCount","split","filter","e","trim","length","checkSeedLength","indexOf","englishValid","every","encodeWord","temp","i","toLowerCase","english","splitSeed","seedArray","encodedWords","offset","maxEncodedWords","Math","ceil","sourceWords","slice","push","encodeWords","splitArray","map","wordCount","maxWordsInColumn","card","getSeedEmptyArray","getSeedElemAsArray","calculateWordsPerCard","wordsOnColumn","maxWord","getWordsOnEncode","wordsCount","restoreSeed","newSeed","lastPage","j","join","getEmptyColumn","currentPosition","checkThatAvailable","arrWords","len","count","arr","lengths","temp_array","encoded","mistakes","checkArr","classNames","args","prototype","call","arguments","classes","forEach","isArray","apply","Object","keys","key","gtag","type","options","window","console","log","Caption","_ref","error","children","caption--invalid","caption--restore-seed","baseClass","value","WordsCount","concat","getWordsText","Placeholder","_ref2","isFocused","defineProperty","ClearButton","props","assign","GenerateButton","SeedContainer","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","onFocus","isRestore","setState","onBlur","state","onChange","onGenerate","event_category","event_action","target","replace","valueWithoutLastWord","onClear","onResetValue","nextProps","_this2","_this$state","showPlaceholder","showGenerateButton","showClearButton","template","isInvalid","wordClasses","seedContainer_WordsCount","es_Switch","es_Route","exact","path","component","render","seedContainer_ClearButton","onClick","seedContainer_GenerateButton","disabled","seedContainer_Placeholder","caption","React","Component","generate","label","recover","generateOption","recoverOption","wordsOption","wordsStyles","control","base","objectSpread","width","generateStyles","GroupHeading","react_select_es","getValueObject","Select","text","objectWithoutProperties","components","classNamePrefix","isSearchable","PagesSelect","onChangePageCount","onChangeWordCount","generateSelectPlaceholder","pagesSelect_Select","styles","isDisabled","copyToClipboard","cb","tmp","document","focus","activeElement","body","appendChild","select","execCommand","removeChild","initialCopyText","CopyButton","onCopy","copyText","setTimeout","preventDefault","Page","_ref3","textToCopy","copyButton","Header","Content","Button","_this$props","color","Actions","onPrint","components_button","Pages","components_page","SplittedSeed","splittedSeed_Actions","components_pagesSelect","splittedSeed_Pages","lazyScroll","duration","w","pageYOffset","t","getBoundingClientRect","top","start","requestAnimationFrame","step","time","progress","r","max","min","scrollTo","SVG","icon-arrow","xmlns","height","viewBox","fillRule","d","Svg","name","Icon","RestoreTitle","RestoreButton","RestoreButtonMobile","canRestore","onRestore","restoreSeed_RestoreButton","restoreSeed_RestoreTitle","RestorePage","onInput","pageNum","_this$props2","wordOnColumn","isValid","placeholderText","placeholderPageNum","itemClasses","restore-seed__page-text--invalid","isCardCorrect","showHeader","svg_Svg","RestoreList","_ref4","restoreSeed_RestorePage","RestoreSeed","isSeedEmpty","some","cardNum","toConsumableArray","onValidate","_this2$props","restoredSeed","mobileGetSeed","_this$props3","emptyCards","canRestoreSeed","checkSeedForErrors","restoreSeed_Title","restoreSeed_RestoreList","restoreSeed_RestoreButtonMobile","onRecoverClick","RecoverLink","Splitter","onSplit","initialState","SeedConstructor","_e$target","onSplitSeed","prevState","validLength","sessionStorage","setItem","open","_this$state2","Route","hasValue","components_splittedSeed","seedConstructor_Splitter","seedConstructor_RecoverLink","components_restoreSeed","Footer","href","rel","FAQItem","header","FAQ","id","Helmet","faq_FAQItem","toCapitalizeCase","string","toUpperCase","homepage","require","getPageWords","pageWordCount","pageIndex","wordIndex","getPlaceholder","cardsCount","SheetWordsColumn","SheetHeader","SheetWords","print_SheetWordsColumn","SheetManual","renderManualCards","activeCard","activeCards","getItem","cards","seedPagesPlaceholder","class","seedPlaceholder","pageWords","isLastCard","Print","getElementsByTagName","classList","add","print","remove","cardWords","print_SheetHeader","print_SheetWords","print_SheetManual","FAQRoute","components_title","components_faq","TopWrapper","showIntro","Switch","seedContainer","App","location","pathname","RegExp","test","defaultTitle","titleTemplate","App_TopWrapper","components_seedConstructor","components_footer","withRouter","src_App_0","BrowserRouter","App_App","Boolean","hostname","match","rootElement","getElementById","hasChildNodes","hydrate"],"mappings":"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","file":"static/js/main.ab8d0382.chunk.js","sourcesContent":["export default {\n\t\"title\": \"paper wallet\",\n\t\"links\": {\n\t\t\"faq\": \"FAQ\",\n\t\t\"termsAndConditions\": \"Terms And Conditions\"\n\t},\n\t\"pages\": {\n\t\t\"index\": {\n\t\t\t\"title\": \"the safest way to keep your seed phrase and private keys, compatible with Bitcoin, Ethereum and any other cryptocurrency\",\n\t\t\t\"description\": \"Paper Wallet is the safest way to keep your seed phrase and private keys, compatible with Bitcoin, Ethereum and any other cryptocurrency. BIP44 support.\"\n\t\t},\n\t\t\"restore\": {\n\t\t\t\"title\": \"recover your seed\"\n\t\t}\n\t},\n\t\"intro\": \"Paper Wallet is the safest way to store your seed phrase and private keys. Our solution allows to split your seed phrase into several pages which you can print out and keep separately. You can lose one page and still be able to recover your seed.\",\n\t\"readMore\": \"Read more\",\n\t\"placeholder\": \"enter your seed\",\n\t\"validText\": \"Paper Wallet page does not store or send your data anywhere. During seed generation or split we recommend disconnecting your computer from the Internet.\",\n\t\"invalidSeed\": \"Invalid seed\",\n\t\"copyright\": \"Copyright © 2018 HashEx, Inc. in cooperation with Elastoo\",\n\t\"pagesToGenerateLabel\": \"pages to generate\",\n\t\"generatedPagesLabel\": \"generated pages\",\n\t\"pagesToGenerateCaption\": \"How many pages will be generated from your seed phrase.\",\n\t\"pagesToRecoverLabel\": \"need to recover\",\n\t\"pagesToRecoverCaption\": \"The minimum number of pages you will need to recover your seed.\",\n\t\"wordsCountCaption\": \"Choose your words count\",\n\t\"word\": \"word\",\n\t\"words\": \"words\",\n\t\"totalWordsLabel\": \"total words\",\n\t\"clear\": \"clear\",\n\t\"autoGenerate\": \"auto-generate seed\",\n\t\"toRecoverYourSeedPhrase\": \"To recover your seed phrase:\",\n\t\"page\": \"page\",\n\t\"goTo\": \"Go to\",\n\t\"doItManually\": \"Or do it manually\",\n\t\"yourSeed\": \"Your seed\",\n\t\"enterSeedWords\": \"enter seed words for each page\",\n\t\"languageErrorText\": \"Enter valid seed words\",\n\t\"lengthErrorText\": \"Please enter either 12, 15, 21 or 24 words via single space\",\n\t\"wrongNumberOfWordsErrorText\": \"Wrong number of words in cards\",\n\t\"notEnoughWordsErrorText\": \"Not enough words\",\n\t\"mistakesOnCardErrorText\": \"One or more cards have mistakes\",\n\t\"restore\": \"restore\"\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./title.css\";\n\nconst Title = () => <h1 className=\"title\"><Link to=\"/\">paper wallet</Link></h1>;\n\nexport default Title;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport content from \"../../content\";\n\nexport default () => (\n  <div className=\"intro\">\n    {content.intro}\n    {\" \"}\n    <Link to=\"/faq/\">{content.readMore}</Link>.\n  </div>\n);\n","import mnemonic from \"./languages/english.json\";\n\nexport const mnemonicAsObject = mnemonic.reduce((acc, item, index) => {\n\tacc[item] = {\n\t\tword: item,\n\t\tindex\n\t};\n\treturn acc;\n}, {});\n\nexport default word => mnemonicAsObject[word] !== undefined;","import isInMnemonic, { mnemonicAsObject } from \"./isInMnemonic\";\n\nexport default {\n\tisInMnemonic,\n\tmnemonicAsObject\n}","import bip39 from \"bip39\";\n\nimport content from \"../content\";\n\nimport english from \"./mnemonic/languages/english.json\";\nimport mnemonic from \"./mnemonic\";\n\nconst { isInMnemonic, mnemonicAsObject } = mnemonic; \n\nexport const WORDS_COUNT_ALLOWED = [12, 15, 18, 21, 24];\n\nexport const ENGLISH_ERROR_TEXT = content.languageErrorText;\nexport const LENGTH_ERROR_TEXT = content.lengthErrorText;\nexport const PAGE_ERROR_TEXT = content.wrongNumberOfWordsErrorText;\nexport const NOT_ENOUGH_WORDS_ERROR_TEXT = content.notEnoughWordsErrorText;\nexport const MISTAKES_ON_CARD_ERROR_TEXT = content.mistakesOnCardErrorText;\n\n\nexport const getEmptyArray = size => Array.from(Array(size));\n\nexport const checkSeed = seed => bip39.validateMnemonic(seed);\nexport const getRandomSeed = () => bip39.generateMnemonic(160);\n\nconst getWordsCount = seed => seed.split(/(\\s+)/).filter(e => e.trim().length).length;\n\nexport const checkSeedLength = seed => {\n\treturn (WORDS_COUNT_ALLOWED.indexOf(getWordsCount(seed)) > -1);\n}\n\nexport const englishValid = seed => {\n\tconst all = seed.split(/(\\s+)/).filter(e => e.trim().length);\n\treturn all.every(isInMnemonic);\n}\n\nexport const canValidate = seedArray => {\n\tconst notEmptyCards = seedArray.filter(item => item);\n\treturn notEmptyCards.length === seedArray.length - 1;\n};\n\nexport const checkSeedForErrors = (seedArray, wordCount, wordsOnColumn) => {\n\tconst seed = seedArray.join(\" \");\n\tconst seedLength = getWordsCount(seed);\n\tif(!seedLength) return null;\n\tlet error = null;\n\tseedArray.forEach((item, index) => {\n\t\tif (!englishValid(item) && !error) {\n\t\t\terror = ENGLISH_ERROR_TEXT;\n\t\t} else if (item && getWordsCount(item) !== wordsOnColumn[index] && !error) {\n\t\t\terror = PAGE_ERROR_TEXT;\n\t\t}\n\t});\n\treturn error;\n}\n\nexport const encodeWord = words => {\n\tlet temp = 0;\n\tfor (let i = 0; i < words.length; i++) {\n\t\tconst word = mnemonicAsObject[words[i].toLowerCase()];\n\t\ttemp ^= word ? word.index : -1;\n\t}\n\treturn english[temp];\n};\n\nexport const encodeWords = (seed, pages) => {\n\tconst offset = pages - 1;\n\tconst maxEncodedWords = Math.ceil(seed.length / offset);\n\tlet encodedWords = [];\n\n\tfor (let i = 0; i < maxEncodedWords; i++) {\n\t\tlet sourceWords = [];\n\t\tif (i !== maxEncodedWords - 1) {\n\t\t\tsourceWords = seed.slice(offset * i, offset * (i + 1));\n\t\t} else {\n\t\t\tsourceWords = seed.slice(offset * i, seed.length);\n\t\t}\n\t\tencodedWords.push(encodeWord(sourceWords));\n\t}\n\n\treturn encodedWords;\n};\n\nexport const splitSeed = (seed, pages) => {\n\tconst seedArray = seed.trim().split(\" \");\n\tlet encodedWords = encodeWords(seedArray, pages),\n\t\tsplitArray = getEmptyArray(pages).map(() => []),\n\t\twordCount = 0,\n\t\toffset = pages - 1,\n\t\tmaxWordsInColumn = 24 / offset;\n\n\tif (24 % offset !== 0) {\n\t\tmaxWordsInColumn++;\n\t}\n\n\tfor (let word = 0; word < maxWordsInColumn; word++) {\n\t\tfor (let card = 0; card < pages; card++) {\n\t\t\tif (card === offset) {\n\t\t\t\tsplitArray[card] = encodedWords;\n\t\t\t} else if (wordCount < seedArray.length) {\n\t\t\t\tsplitArray[card][word] = seedArray[wordCount];\n\t\t\t\twordCount++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn splitArray;\n};\n\nexport const getSeedEmptyArray = pages => getEmptyArray(pages).map(() => '');\n\nexport const getSeedElemAsArray = seed => {\n\treturn seed.map((item, i) => {\n\t\tif (item.length > 0) {\n\t\t\treturn seed[i].split(\" \");\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t});\n}\n\nexport const calculateWordsPerCard = (wordCount, pages) => {\n\tlet word = 0;\n\tlet wordsOnColumn = [];\n\tlet maxWord = Math.ceil(wordCount / (pages - 1));\n\t\n\tfor (let i = 1; i <= maxWord; i++) {\n\t\tfor (let card = 0; card < pages - 1; card++) {\n\t\t\tif (word < wordCount) {\n\t\t\t\twordsOnColumn[card] = i;\n\t\t\t\tword++\n\t\t\t}\n\t\t}\n\t}\n\twordsOnColumn[pages - 1] = maxWord;\n\n\treturn wordsOnColumn;\n}\n\nexport const getWordsOnEncode = (seed, wordsCount) => {\n\tconst pages = seed.length;\n\tconst offset = pages - 1;\n\tconst encodedWords = getEmptyArray(Math.ceil(wordsCount / offset));\n\n\tfor (var i = 0; i < encodedWords.length - 1; i++) {\n\t\tencodedWords[i] = pages;\n\t}\n\n\tif (wordsCount % offset === 0) {\n\t\tencodedWords[encodedWords.length - 1] = pages;\n\t} else {\n\t\tencodedWords[encodedWords.length - 1] = 1 + (wordsCount % offset);\n\t}\n\n\treturn encodedWords;\n}\n\n\nexport const restoreSeed = (seedArray, wordsCount) => {\n\t//const seedArray = getSeedElemAsArray(seed);\n\tconst encodedWords = getWordsOnEncode(seedArray, wordsCount);\n\t\n\tlet newSeed = [];\n\tlet lastPage = [];\n\n\tfor (let i = 0; i < encodedWords.length; i++) {\n\t\tfor (let j = 0; j < seedArray.length; j++) {\n\n\t\t\tif(j === seedArray.length - 1) {\n\t\t\t\tlastPage.push(seedArray[j][i])\n\t\t\t} else {\n\t\t\t\tnewSeed.push(seedArray[j][i]);\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn newSeed.join(\" \").toLowerCase().trim();\n}\n\nexport const canRestoreSeed = (seedArray, wordCount, wordsOnColumn) => {\n\tif(!seedArray) return seedArray;\n\tconst emptyCards = seedArray.filter((item, index) => {\n\t\tif(!item) return false;\n\t\treturn item.length !== wordsOnColumn[index];\n\t});\n\tif(!emptyCards.length) return true;\n\treturn !(emptyCards.length - 1);\n}\n\n\nexport const getEmptyColumn = (seed, wordCount, wordsOnColumn) => {\n\tlet currentPosition = 0;\n\tconst checkThatAvailable = (arrWords, j, len) => {\n\t\tlet count = len;\n\t\tfor (let i = 0; i < arrWords.length; i++) {\n\t\t\tif (arrWords[i][j] === '') {\n\t\t\t\tcount--;\n\t\t\t\tcurrentPosition = i;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t}\n\tconst checkArr = (seedArray, arr) => {\n\t\tlet mistakes = 0;\n\n\t\tfor(let card = 0; card < seedArray.length; card++) {\n\t\t\tif(seedArray[card].length !== arr[card].length) {\n\t\t\t\tmistakes++;\n\t\t\t}\n\t\t}\n\n\t\treturn mistakes <= 1;\n\t}\n\tconst seedArray = getSeedElemAsArray(seed).map(words => words.filter(word => word !== \"\"));;\n\tlet arr = seed.map((item, index) => {\n\t\tconst wordsCount = wordsOnColumn[index];\n\t\tconst card = seedArray[index];\n\t\tlet words = [];\n\t\tfor(let i = 0; i < wordsCount; i++) {\n\t\t\tlet word = card[i] ? card[i].toLowerCase() : \"\";\n\t\t\twords[i] = isInMnemonic(word) ? word : \"\";\n\t\t}\n\t\treturn words;\n\t});\n\n\tlet lengths = getWordsOnEncode(seed, wordCount);\n\t\n\tfor (let i = 0; i < lengths.length; i++) {\n\t\tif (checkThatAvailable(arr, i, lengths[i]) === (lengths[i] - 1)) {\n\t\t\t\n\t\t\tlet temp_array = [];\n\t\t\tfor (let j = 0; j < arr.length; j++) {\n\t\t\t\tif (j !== currentPosition && arr[j][i] !== undefined) {\n\t\t\t\t\ttemp_array.push(arr[j][i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet encoded = encodeWord(temp_array);\n\t\t\tif (encoded !== undefined) {\n\t\t\t\tarr[currentPosition][i] = encoded;\n\t\t\t}\n\t\t}\n\t}\n\tif (!checkArr(seedArray, arr)) return false;\n\n\treturn arr;\n}","export default function classNames(){\n\tconst args = Array.prototype.slice.call(arguments);\n\tlet classes = [];\n\targs.forEach((item) => {\n\t\tif(typeof item === \"string\" && item){\n\t\t\tclasses.push(item);\n\t\t}\n\t\tif(typeof item === \"object\" && item){\n\t\t\tif(!Array.isArray(item)){\n\t\t\t\tObject.keys(item).forEach(key => {\n\t\t\t\t\tif(item[key]){\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}else if(Array.isArray(item) && item.length){\n\t\t\t\tclasses.push(classNames.apply(null, item));\n\t\t\t}\n\t\t}\n\t});\n\tclasses = classes.filter((item, index) => classes.indexOf(item) === index).join(\" \");\n\treturn classes;\n}","export default (type, options) => {\n\tconst { gtag } = window;\n\tif(typeof gtag !== 'undefined'){\n\t\tgtag('event', type, options);\n\t}else{\n\t\tconsole.log('Gtag is not defined');\n\t}\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport classNames from \"../../lib/classNames\";\n\nconst Caption = ({error, restore, children}) => {\n  let classes = classNames(\"caption\", {\n  \t\"caption--invalid\": error,\n  \t\"caption--restore-seed\": restore\n  });\n  return <p className={classes}>{error ? error : children}</p>\n};\n\nCaption.propTypes = {\n\tclassName: PropTypes.string,\n\terror: PropTypes.string,\n\tchildren: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n}\n\nexport default Caption;","import React from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  getRandomSeed,\n  checkSeed,\n  englishValid,\n  ENGLISH_ERROR_TEXT\n} from \"../../lib/seedHelpers\";\n\nimport classNames from \"../../lib/classNames\";\n\nimport gtag from \"../../utils/gtag\";\n\nimport content from \"../../content\";\n\nimport Caption from \"../caption\";\n\nconst baseClass = \"seed-container\";\n\nconst getWordsCount = value => value.length ? value.trim().split(\" \").length : 0;\nconst getWordsText = wordsCount => wordsCount > 1 ? wordsCount + \" \" + content.words : wordsCount + \" \" + content.word;\n\nconst WordsCount = ({value}) => {\n  const wordsCount = getWordsCount(value);\n  if(!wordsCount) return null;\n  return (\n    <div className={`${baseClass}__words-count`}>\n      {getWordsText(wordsCount)}\n    </div>\n  );\n};\n\nconst Placeholder = ({isFocused}) => {\n  let classes = classNames(`${baseClass}__placeholder`, {\n    [`${baseClass}__placeholder--focus`]: isFocused\n  });\n  return <div className={classes}>{content.placeholder}</div>;\n};\n\nconst ClearButton = (props) => (\n  <button className={`${baseClass}__clear`} {...props}>\n    {content.clear}\n  </button>\n);\n\nconst GenerateButton = (props) => (\n  <button className={`${baseClass}__generate`} {...props}>\n    {content.autoGenerate}\n  </button>\n);\n\nclass SeedContainer extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      isFocused: false,\n      value: props.value,\n      error: null\n    }\n  }\n  onFocus = () => {\n    const { isRestore } = this.props;\n    if(isRestore) return;\n    this.setState({isFocused: true});\n    if(this.props.onFocus){\n      this.props.onFocus();  \n    }\n  }\n  onBlur = () => {\n    const { isRestore } = this.props;\n    if(isRestore) return;\n    const { value: currentValue } = this.state;\n    const value = currentValue.trim();\n    let error = englishValid(value) ? null : ENGLISH_ERROR_TEXT;\n    if(value && !checkSeed(value) && !error){\n      error = content.invalidSeed;\n    }\n    this.setState({value: value, error, isFocused: false});\n    if(this.props.onBlur){\n      this.props.onBlur();\n    }\n    if(this.props.onChange){\n      this.props.onChange(value)\n    }\n  }\n  onGenerate = () => {\n    const value = getRandomSeed();\n    this.setState({value});\n    gtag('auto-generate', {\n      event_category: 'Elements',\n      event_action: 'Autogenerate'\n    });\n    if(this.props.onChange){\n      this.props.onChange(value);\n    }\n  }\n  onChange = (e) => {\n    const { isRestore } = this.props;\n    if(isRestore) return;\n    const { value: initialValue } = e.target;\n    const value = initialValue.replace(/\\s+/g, \" \");\n    const valueWithoutLastWord = value.split(\" \").slice(0, -1).join(\" \"); // checking all words before space\n    const error = englishValid(valueWithoutLastWord) ? null : ENGLISH_ERROR_TEXT;\n    this.setState({value, error})\n    if(this.props.onChange){\n      this.props.onChange(value);\n    }\n  }\n  onClear = () => {\n    this.setState({error: null, value: \"\"});\n    if(this.props.onResetValue){\n      this.props.onResetValue();\n    }\n  }\n  componentWillReceiveProps(nextProps){\n    if(nextProps.value !== this.props.value){\n      this.setState({value: nextProps.value});\n    }\n  }\n  render(){\n    const { isFocused, value, error } = this.state;\n    const { isRestore } = this.props;\n    const wordsCount = getWordsCount(value);\n\n    if(isRestore && !wordsCount) return null;\n\n    const showPlaceholder = wordsCount === 0;\n    const showGenerateButton = wordsCount === 0;\n    const showClearButton = wordsCount > 0;\n    \n    let template = null;\n\n    if (wordsCount > 0) {\n      template = value.split(\" \").map((word, i, words) => {\n        const isValid = englishValid(word);\n        let isInvalid = !isValid && this.state.error;\n        if((i === words.length - 1 && isFocused)){\n          isInvalid = false;\n        }\n        const wordClasses = classNames(`${baseClass}__text`, {\n          [`${baseClass}__text--invalid`]: isInvalid\n        });\n        return <span className={wordClasses} key={i}>{word}</span>;\n      })\n    }\n    const Buttons = () => (\n      <div>\n        {showClearButton && <ClearButton onClick={this.onClear} />}\n        {showGenerateButton && <GenerateButton onClick={this.onGenerate} />}\n      </div>\n    );\n    const classes = classNames(`${baseClass}`, {[`${baseClass}--focused`]: isFocused});\n    return (\n      <div className={classes}>\n        <WordsCount value={value} />\n        <Switch>\n          <Route exact path=\"/recover/\" component={null} />\n          <Route render={Buttons} />\n        </Switch>\n        <form className={`${baseClass}__form`}>\n          {template}\n          <textarea\n            disabled={isRestore}\n            onChange={this.onChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            value={value}\n            className={`${baseClass}__textarea`}\n          />\n          {showPlaceholder && <Placeholder isFocused={isFocused} />}\n        </form>\n        <Caption error={error}>{content.validText}</Caption>\n      </div>\n    )\n  }\n}\n\nSeedContainer.propTypes = {\n  value: PropTypes.string.isRequired,\n  isRestore: PropTypes.bool,\n  onChange: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onClear: PropTypes.func\n}\n\nexport default SeedContainer;","import React from \"react\";\nimport ReactSelect, { components } from \"react-select\";\n\nimport classNames from \"../../lib/classNames\";\nimport { WORDS_COUNT_ALLOWED, getEmptyArray } from \"../../lib/seedHelpers\";\n\nimport content from \"../../content\";\n\nimport \"./pagesSelect.css\";\n\nconst generate = getEmptyArray(6).map((item, index) => ({value: index + 3, label: index + 3}));\nconst recover = getEmptyArray(6).map((item, index) => ({value: index + 2, label: index + 2}));\nconst words = WORDS_COUNT_ALLOWED.map(item => ({value: item, label: item}));\n\nconst generateOption = [{\n  label: content.pagesToGenerateCaption,\n  options: generate\n}];\n\nconst recoverOption = [{\n  label: content.pagesToRecoverCaption,\n  options: generate\n}];\n\nconst wordsOption = [{\n  label: content.wordsCountCaption,\n  options: words,\n}];\n\nconst wordsStyles = {\n  control: base => ({\n    ...base,\n    width: \"36px\"\n  })\n}\n\nconst generateStyles = {\n  control: base => ({\n    ...base,\n    width: \"28px\"\n  })\n}\n\nconst GroupHeading = props => <components.GroupHeading {...props} />\n\nconst getValueObject = (value, arr) => {\n  for (let i in arr) {\n    if (value === arr[i].value) {\n      return arr[i]\n    }\n  }\n}\n\nconst Select = ({ text, className, ...props}) => {\n  const classes = classNames(\"pages-select__block\", className);\n  return (\n    <div className={classes}>\n      <div><p className=\"pages-select__text\">{text}</p></div>\n      <ReactSelect\n        components={GroupHeading}\n        classNamePrefix=\"pages-select\"\n        isSearchable={false}\n        {...props}\n      />\n    </div>\n  )\n}\n\nconst PagesSelect = (props) => {\n  const { \n    isRestore,\n    pages,\n    wordsCount,\n    onChangePageCount,\n    onChangeWordCount\n  } = props;\n  const generateSelectPlaceholder = isRestore ? content.generatedPagesLabel: content.pagesToGenerateLabel;\n  return (\n    <div className=\"pages-select__container\">\n      <div className=\"pages-select__container-position\">\n        <Select\n          text={generateSelectPlaceholder}\n          styles={generateStyles}\n          value={getValueObject(pages, generate)}\n          options={generateOption}\n          onChange={onChangePageCount}\n        />\n        <Select\n          text={content.pagesToRecoverLabel}\n          styles={generateStyles}\n          value={getValueObject(pages - 1, recover)}\n          isDisabled={true}\n          options={recoverOption}\n        />\n        {isRestore && (\n          <Select\n            className=\"pages-select__block--words\"\n            text={content.totalWordsLabel}\n            styles={wordsStyles}\n            value={getValueObject(wordsCount, words)}\n            options={wordsOption}\n            onChange={onChangeWordCount}\n          />\n        )}\n      </div>\n    </div>\n  )\n};\n\nexport default PagesSelect;","export default (text, cb) => {\n    let tmp = document.createElement(\"input\");\n    let focus = document.activeElement;\n    tmp.value = text.trim();\n    document.body.appendChild(tmp);\n    tmp.select(); \n    document.execCommand('copy'); \n    document.body.removeChild(tmp);\n    focus.focus();\n    if(typeof cb === \"function\"){\n        cb();\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport copyToClipboard from \"../../lib/copyToClipboard\";\nimport classNames from \"../../lib/classNames\";\n\nconst initialCopyText = \"copy\";\n\nclass CopyButton extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcopyText: initialCopyText\n\t\t}\n\t}\n\tonCopy = () => {\n\t\tthis.setState({copyText: \"copied!\"});\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({copyText: initialCopyText});\n\t\t}, 1000);\n\t};\n\tonClick = e => {\n\t\tconst {text} = this.props;\n\t\te.preventDefault();\n\t\tcopyToClipboard(text, this.onCopy);\n\t};\n\trender(){\n\t\tconst {className} = this.props;\n\t\tconst classes = classNames(\"copy-btn\", className);\n\t\treturn (\n\t\t\t<button className={classes} onClick={this.onClick}>\n\t\t\t\t{this.state.copyText}\n\t\t\t</button>\n\t\t);\n\t}\n};\n\nCopyButton.propTypes = {\n\tclassName: PropTypes.string,\n\ttext: PropTypes.string.isRequired\n}\n\n\nexport default CopyButton;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport CopyButton from \"../copyButton\";\n\nimport \"./page.css\";\n\nconst Header = ({children}) => (\n\t<div className=\"page__headline\">{children}</div>\n);\n\nconst Content = ({children}) => (\n\t<div className=\"page__content\">{children}</div>\n);\n\nconst Page = ({ children, textToCopy }) => (\n\t<div className=\"page\">\n\t\t<div className=\"page__inner\">\n\t\t\t{children}\n\t\t\t{textToCopy && <CopyButton className=\"page__copy\" text={textToCopy} />}\n\t\t</div>\n\t</div>\n);\n\nPage.propTypes = {\n\tchildren: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.element,\n\t\tPropTypes.arrayOf(PropTypes.element)\n\t]).isRequired,\n\ttextToCopy: PropTypes.string\n}\n\nPage.Header = Header;\nPage.Content = Content;\n\nexport default Page;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport classNames from \"../../lib/classNames\";\n\nimport \"./button.css\";\n\nclass Button extends React.Component {\n\trender(){\n\t\tconst {className, children, color, ...props} = this.props;\n\t\tconst classes = classNames(\"btn\", className, {\n\t\t\t[`btn--${color}`]: color\n\t\t});\n\t\treturn (\n\t\t\t<button className={classes} {...props}>\n\t\t\t\t{children}\n\t\t\t</button>\n\t\t)\n\t}\n}\n\nButton.propTypes = {\n\tclassName: PropTypes.string,\n\tchildren: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\tcolor: PropTypes.oneOf([\"green\", \"white\"])\n}\n\nexport default Button;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport PagesSelect from \"../pagesSelect\";\nimport Page from \"../page\";\nimport Button from \"../button\";\n\nimport \"./splittedSeed.css\";\n\nconst Actions = ({ onPrint, onClear }) => (\n  <div className=\"splitted-seed__title-with-btn\">\n    <Button color=\"green\" onClick={onPrint}>\n      print\n    </Button>\n    <Button color=\"white\" onClick={onClear}>\n      clear\n    </Button>\n  </div>\n);\n\nActions.propTypes = {\n  onPrint: PropTypes.func.isRequired,\n  onClear: PropTypes.func.isRequired\n}\n\nconst Pages = ({ seed }) => (\n  <div className=\"splitted-seed__list\">\n    <div className=\"splitted-seed__list-position\">\n      {seed.map((text, i) => (\n        <Page key={i} textToCopy={text}>\n          <Page.Header>{i + 1}</Page.Header>\n          <Page.Content>{text}</Page.Content>\n        </Page>\n      ))}\n    </div>\n  </div>\n);\n\nPages.propTypes = {\n  seed: PropTypes.arrayOf(PropTypes.string).isRequired\n}\n\nconst SplittedSeed = props => {\n  const { seed, onPrint, onClear, pages, onChangePageCount } = props;\n  return (\n    <div className=\"container\">\n      <Actions onPrint={onPrint} onClear={onClear} />\n      <PagesSelect pages={pages} onChangePageCount={onChangePageCount} />\n      <Pages seed={seed} />\n    </div>\n  );\n};\n\nSplittedSeed.propTypes = {\n  onPrint: PropTypes.func.isRequired,\n  onClear: PropTypes.func.isRequired,\n  pages: PropTypes.number.isRequired,\n  onChangePageCount: PropTypes.func.isRequired,\n  seed: PropTypes.arrayOf(PropTypes.string).isRequired,\n}\n\nexport default SplittedSeed;\n","export default () => {\n  var duration = 1;\n  var w = window.pageYOffset;\n  var t = document.body.getBoundingClientRect().top;\n  var start = null;\n  requestAnimationFrame(step);\n  function step(time) {\n    if (start === null) start = time;\n    var progress = time - start;\n    var r =\n      t < 0\n        ? Math.max(w - progress / duration, w + t)\n        : Math.min(w + progress / duration, w + t);\n\n    window.scrollTo(0, r);\n\n    if (r !== w + t) requestAnimationFrame(step);\n  }\n};","import React from \"react\"\nimport \"./icons.css\";\n\nconst SVG = {\n\t\"icon-arrow\": (props) => (\n\t\t<svg\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\twidth=\"13\"\n\t\t\theight=\"9\"\n\t\t\tviewBox=\"0 0 13 9\"\n\t\t\t{...props}\n\t\t>\n\t\t\t<path\n\t\t\t\tfillRule=\"evenodd\"\n\t\t\t\td=\"M6.753 7.888l-.317.316L0 1.768 1.768 0l4.684 4.684L11.135 0l1.768 1.768-6.135 6.135-.015-.015z\"\n\t\t\t/>\n\t\t</svg>\n\t)\n}\n\n\nconst Svg = ({name, className}) => {\n\tconst Icon = SVG[name];\n\treturn <Icon className={className} />\n}\n\nexport default Svg;","import React, { Component } from \"react\";\n\nimport classNames from \"../../lib/classNames\";\nimport lazyScroll from \"../../lib/lazyScroll\";\n\nimport {\n  englishValid,\n  checkSeedForErrors,\n  canValidate,\n  canRestoreSeed,\n  restoreSeed,\n  getEmptyColumn,\n  getSeedElemAsArray,\n  getSeedEmptyArray,\n  MISTAKES_ON_CARD_ERROR_TEXT\n} from \"../../lib/seedHelpers\";\n\nimport content from \"../../content\";\n\nimport PagesSelect from \"../pagesSelect\";\nimport Svg from \"../svg/Svg\";\nimport Button from \"../button\";\nimport CopyButton from \"../copyButton\";\nimport Caption from \"../caption\";\nimport Page from \"../page\";\n\nimport \"./restoreSeed.css\";\n\nconst placeholderPageNum = pageNum => {\n  const arr = [\n    \"first\",\n    \"second\",\n    \"third\",\n    \"fourth\",\n    \"fifth\",\n    \"sixth\",\n    \"seventh\",\n    \"eighth\"\n  ];\n\n  return arr[pageNum] || pageNum;\n};\n\nconst RestoreTitle = () => (\n  <h3 className=\"text-center restore-seed__title\">\n    {content.enterSeedWords}\n  </h3>\n);\n\nconst RestoreButton = ({ onClick }) => (\n  <div className=\"restore-seed__title-with-btn\">\n    <Button color=\"green\" className=\"btn--restore-seed\" onClick={onClick}>\n      {content.restore}\n    </Button>\n  </div>\n);\n\nconst RestoreButtonMobile = ({ onClick }) => (\n  <div className=\"text-center\">\n    <Button\n      color=\"green\"\n      className=\"btn--restore-seed-mobile\"\n      onClick={onClick}\n    >\n      {content.restore}\n    </Button>\n  </div>\n);\n\nconst Title = ({ value, seed, canRestore, onRestore }) => {\n  if (value && canRestore) {\n    return (\n      <div className=\"restore-seed__title-with-btn\">\n        <CopyButton className=\"btn btn--green\" text={value} />\n      </div>\n    );\n  }\n  if (canRestore) {\n    return <RestoreButton onClick={onRestore} />;\n  }\n  return <RestoreTitle />;\n};\n\nclass RestorePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false\n    };\n  }\n  onFocus = () => {\n    this.setState({ isFocused: true });\n  };\n  onInput = e => {\n    const { onInput, pageNum } = this.props;\n    const { value } = e.target;\n    onInput(value.replace(/\\s+/, \" \"), pageNum);\n  };\n  onBlur = () => {\n    this.setState({ isFocused: false });\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  render() {\n    const { isFocused } = this.state;\n    let { text, pageNum, wordOnColumn } = this.props;\n    let isValid = true;\n    const words = text ? text.trim().split(\" \") : [];\n    const invalidWordsLength = words.filter(word => !englishValid(word)).length;\n    if (invalidWordsLength > 0) {\n      isValid = false;\n    } else if (words.length !== wordOnColumn) {\n      isValid = false;\n    }\n    let template = null;\n    let placeholderText = `enter ${placeholderPageNum(pageNum)} page`;\n\n    if (text.length) {\n      template = text.split(\" \").map((item, i) => {\n        if (!item.trim().length) return null;\n        let isValid = englishValid(item);\n        const itemClasses = classNames(\"restore-seed__page-text\", {\n          \"restore-seed__page-text--invalid\": !isValid\n        });\n        return (\n          <p className={itemClasses} key={i}>\n            {item}\n          </p>\n        );\n      });\n    }\n    const isCardCorrect = isValid && !isFocused;\n    const showHeader = !!text.length;\n    return (\n      <Page>\n        <Page.Header>\n          {showHeader && <p className=\"restore-seed__text\">{++pageNum}</p>}\n          {isCardCorrect && (\n            <Svg className=\"icon-arrow-restore-seed\" name=\"icon-arrow\" />\n          )}\n        </Page.Header>\n        <Page.Content>\n          <form className=\"restore-seed__page-form\">\n            {template}\n            <textarea\n              className=\"restore-seed__page-textarea\"\n              placeholder={placeholderText}\n              value={text}\n              onFocus={this.onFocus}\n              onInput={this.onInput}\n              onBlur={this.onBlur}\n            />\n          </form>\n        </Page.Content>\n      </Page>\n    );\n  }\n}\n\nconst RestoreList = ({ pages, seed, wordsOnColumn, onInput, onBlur }) => (\n  <div className=\"restore-seed__list\">\n    <div className=\"restore-seed__list-position\">\n      {Array.from(Array(pages)).map((item, i) => {\n        return (\n          <RestorePage\n            key={i}\n            text={seed[i] || \"\"}\n            pageNum={i}\n            wordOnColumn={wordsOnColumn[i]}\n            onInput={onInput}\n            onBlur={onBlur}\n          />\n        );\n      })}\n    </div>\n  </div>\n);\n\nclass RestoreSeed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      seed: getSeedEmptyArray(props.pages)\n    };\n  }\n  isSeedEmpty = () => this.state.seed.some(item => item === \"\");\n  onInput = (value, cardNum) => {\n    const { seed } = this.state;\n    this.props.onResetValue();\n    this.setState({\n      seed: [...seed.slice(0, cardNum), value, ...seed.slice(cardNum + 1)]\n    });\n  };\n  onBlur = () => {};\n  onValidate = () => {\n    const seedArray = getSeedElemAsArray(this.state.seed);\n    let mistakes = 0;\n    for (let card = 0; card < seedArray.length; card++) {\n      if (seedArray[card].length <= 1) {\n        mistakes++;\n      }\n    }\n    return mistakes <= 1;\n  };\n  onRestore = () => {\n    const { wordsCount, wordsOnColumn } = this.props;\n    const { seed } = this.state;\n    const arr = getEmptyColumn(seed, wordsCount, wordsOnColumn);\n    const restoredSeed = restoreSeed(arr, wordsCount);\n    this.props.onRestore(restoredSeed);\n    this.setState({ seed: arr.map(words => words.join(\" \")) });\n  };\n  mobileGetSeed = () => {\n    this.onRestore();\n    lazyScroll();\n  };\n  componentWillUnmount() {\n    if (this.props.onClear) {\n      this.props.onClear();\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (this.props.pages !== nextProps.pages) {\n      this.setState({ seed: getSeedEmptyArray(nextProps.pages) });\n      this.props.onResetValue();\n    }\n    if (this.props.wordsCount !== nextProps.wordsCount) {\n      this.props.onResetValue();\n    }\n  }\n  render() {\n    const {\n      value,\n      pages,\n      wordsCount,\n      wordsOnColumn,\n      onChangePageCount,\n      onChangeWordCount\n    } = this.props;\n    const { seed } = this.state;\n    const arr = getEmptyColumn(seed, wordsCount, wordsOnColumn);\n    const canRestore = canRestoreSeed(arr, wordsCount, wordsOnColumn);\n    let error = null;\n    if (canValidate(seed)) {\n      error = checkSeedForErrors(seed, wordsCount, wordsOnColumn);\n    }\n    if (!canRestore && !error && !this.isSeedEmpty()) {\n      error = MISTAKES_ON_CARD_ERROR_TEXT;\n    }\n    return (\n      <div className=\"container\">\n        <div className=\"restore-seed__container\">\n          <Title\n            seed={seed}\n            value={value}\n            canRestore={canRestore && !error}\n            onRestore={this.onRestore}\n          />\n          <PagesSelect\n            isRestore={true}\n            pages={pages}\n            wordsCount={wordsCount}\n            onChangePageCount={onChangePageCount}\n            onChangeWordCount={onChangeWordCount}\n          />\n          <RestoreList\n            seed={seed}\n            pages={pages}\n            wordsOnColumn={wordsOnColumn}\n            onInput={this.onInput}\n          />\n          <Caption error={error} restore />\n          {canRestore &&\n            !value && <RestoreButtonMobile onClick={this.mobileGetSeed} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RestoreSeed;\n","import React from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nimport {\n  splitSeed,\n  checkSeed,\n  getSeedEmptyArray,\n  calculateWordsPerCard,\n  ENGLISH_ERROR_TEXT,\n  LENGTH_ERROR_TEXT,\n  checkSeedLength,\n  englishValid\n} from \"../../lib/seedHelpers\";\nimport gtag from \"../../utils/gtag\";\n\nimport PagesSelect from \"../pagesSelect\";\nimport SplittedSeed from \"../splittedSeed\";\nimport RestoreSeed from \"../restoreSeed\";\nimport Svg from \"../svg/Svg\";\nimport Button from \"../button\";\n\nimport \"./seedConstructor.css\";\n\nconst onRecoverClick = e => {\n  gtag('recover', {\n    event_category: 'Elements',\n    event_action: 'Recover'\n  });\n}\n\nconst RecoverLink = () => (\n  <div className=\"container\">\n    <div className=\"restore__container\">\n      <Link to=\"/recover/\" className=\"restore__link\" onClick={onRecoverClick}>\n        <Svg className=\"icon-arrow\" name=\"icon-arrow\" />\n        <span className=\"restore__title\">recover your seed</span>\n      </Link>\n    </div>\n  </div>\n);\n\nconst Splitter = ({ value, pages, onSplit, onChangePageCount }) => {\n  return (\n    <div className=\"container\">\n      <div className=\"splitter__container\">\n        <Button\n          color=\"green\"\n          className=\"btn--valid-seed\"\n          onClick={onSplit}\n          disabled={!checkSeed(value)}\n        >\n          split\n        </Button>\n        {value && (\n          <PagesSelect \n            pages={pages} \n            onChangePageCount={onChangePageCount}\n          />\n        )}\n      </div>\n    </div>\n  )\n};\n\nconst initialState = {\n  pages: 3,\n  wordsCount: 15,\n  wordsOnColumn: calculateWordsPerCard(15, 3),\n  error: null,\n  seed: getSeedEmptyArray(3)\n}\n\nclass SeedConstructor extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = initialState;\n  }\n  onChange = (e) => {\n    const {name, value} = e.target;\n    this.setState({[name]: value});\n  }\n  onSplitSeed = () => {\n    const { value } = this.props;\n    const { pages } = this.state;\n    const seedArray = splitSeed(value, pages).map(item => item.join(\" \"));\n\n    this.setState(prevState => ({\n      seed: seedArray,\n      value\n    }));\n  };\n  onSplit = () => {\n    const { value } = this.props;\n    const validLength = checkSeedLength(value);\n    const validEnglish = englishValid(value);\n\n    if (!validEnglish && value.length > 0) {\n      this.setState({error: ENGLISH_ERROR_TEXT});\n    } else if (!validLength && value.length > 0) {\n      this.setState({error: LENGTH_ERROR_TEXT});\n    } else {\n      gtag('split', {\n        event_category: 'Elements',\n        event_action: 'Split'\n      });\n      this.onSplitSeed();\n    }\n  };\n  onChangePageCount = ({ value }) => {\n    this.setState({pages: value}, this.onSplitSeed);\n  };\n  onChangeWordCount = ({ value }) => {\n    const { pages } = this.state;\n    const seed = getSeedEmptyArray(pages);\n    this.setState({\n      wordsCount: value,\n      seed\n    });\n  };\n  onPrint = () => {\n    const { pages, seed } = this.state;\n    const { value } = this.props;\n    gtag('print', {\n      event_category: 'Elements',\n      event_action: 'Print'\n    });\n    const wordsCount = value.trim().split(\" \").length;\n    sessionStorage.setItem(\"cards_count\", pages);\n    sessionStorage.setItem(\"words_count\", wordsCount);\n    sessionStorage.setItem(\"words\", seed);\n    window.open(\"/print\");\n  };\n  onClear = () => {\n    this.setState(initialState);\n    this.props.onResetValue();\n  }\n  componentWillReceiveProps(nextProps){\n    if(this.props.value !== nextProps.value && !nextProps.isRestore){\n      this.setState(initialState);\n    }\n  }\n  render(){\n    const { value, onRestore, onResetValue } = this.props;\n    const { wordsCount, pages, seed } = this.state;\n    const wordsOnColumn = calculateWordsPerCard(wordsCount, pages);\n    let template = () => {\n      const hasValue = seed[0].length && value;\n      return (\n        <div>\n          {\n            hasValue ? (\n              <SplittedSeed\n                seed={seed}\n                value={value}\n                pages={pages}\n                onClear={this.onClear}\n                onPrint={this.onPrint}\n                onChangePageCount={this.onChangePageCount}\n              />\n            ) : (\n              <Splitter\n                value={value}\n                pages={pages}\n                onSplit={this.onSplit}\n                onChangePageCount={this.onChangePageCount}\n              />\n            )\n          }\n          <RecoverLink />\n        </div>\n      );\n    }\n\n    const recover = () => {\n      return (\n        <RestoreSeed \n          pages={pages}\n          wordsCount={wordsCount}\n          wordsOnColumn={wordsOnColumn}\n          seed={seed}\n          value={value}\n          onClear={this.onClear}\n          onChangePageCount={this.onChangePageCount}\n          onChangeWordCount={this.onChangeWordCount}\n          onRestore={onRestore}\n          onResetValue={onResetValue}\n        />\n      );\n    }\n\n    return (\n      <div className=\"seed-constructor\">\n        <Route exact path=\"/\" render={template} />\n        <Route exact path=\"/recover\" render={recover} />\n      </div>\n    )\n  }\n};\n\nexport default SeedConstructor;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport content from \"../../content\";\n\nimport \"./footer.css\";\n\nconst Footer = () => (\n\t<footer className=\"footer\">\n\t\t<div className=\"container\">\n\t\t\t<Link to=\"/\" className=\"footer__logo\">\n\t\t\t\t{content.title}\n\t\t\t</Link>\n\t\t\t<ul className=\"footer__menu\">\n\t\t\t\t<li className=\"footer__menu-item\">\n\t\t\t\t\t<Link to=\"/faq/\" className=\"footer__menu-link\">\n\t\t\t\t\t\t{content.links.faq}\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"footer__menu-item\">\n\t\t\t\t\t<a href=\"/#\" className=\"footer__menu-link\">\n\t\t\t\t\t\t{content.links.termsAndConditions}\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t\t<li className=\"footer__menu-item\">\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"https://github.com/HashEx/paperwallet\"\n\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\trel=\"nofollow noopener noreferrer\"\n\t\t\t\t\t\tclassName=\"footer__menu-link\"\n\t\t\t\t\t>\n\t\t\t\t\t\tGitHub\n\t\t\t\t\t</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t\t<div className=\"footer__copy\">\n\t\t\t\t{content.copyright}\n\t\t\t</div>\n\t\t</div>\n\t</footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport PropTypes from \"prop-types\";\n\nimport \"./faq.css\";\n\nconst FAQItem = ({ header, children }) => {\n\treturn (\n\t\t<div className=\"faq-item\">\n\t\t\t<h2 className=\"faq-item__header\">{header}</h2>\n\t\t\t<div className=\"faq-item__text\">{children}</div>\n\t\t</div>\n\t);\n};\n\nFAQItem.propTypes = {\n\theader: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n\tchildren: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n};\n\nclass FAQ extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"faq\" className=\"faq\">\n\t\t\t\t<Helmet>\n\t\t\t\t\t<title>Frequently Asked Questions</title>\n\t\t\t\t</Helmet>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<FAQItem header=\"What is it?\">\n\t\t\t\t\t\tPaper Wallet is the safest way to store your seed phrase\n\t\t\t\t\t\tand private keys. It was designed by{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://hashex.org\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tHashEx\n\t\t\t\t\t\t</a>{\" \"}\n\t\t\t\t\t\tin cooperation with{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://elastoo.com/\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"nofollow noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tElastoo\n\t\t\t\t\t\t</a>{\" \"}\n\t\t\t\t\t\tand allows to split your seed phrase into several pages\n\t\t\t\t\t\twhich you can print out and keep separately. We\n\t\t\t\t\t\trecommend locking the pages in separate safe deposit\n\t\t\t\t\t\tboxes in different locations. Paper Wallet supports\n\t\t\t\t\t\tredundant encryption algorithms, thus, letting you set\n\t\t\t\t\t\tnot only the number of pages to store the seed on, but\n\t\t\t\t\t\talso the number of pages required to recover the seed.\n\t\t\t\t\t</FAQItem>\n\t\t\t\t\t<FAQItem header=\"How about privacy?\">\n\t\t\t\t\t\tPaper Wallet does not store or send your data anywhere.\n\t\t\t\t\t\tDuring seed generation or split we recommend\n\t\t\t\t\t\tdisconnecting your computer from the Internet. Our\n\t\t\t\t\t\tsoftware is an open source so anyone can audit it if\n\t\t\t\t\t\tthey have security concerns.\n\t\t\t\t\t</FAQItem>\n\t\t\t\t\t<FAQItem header=\"What cryptocurrencies are supported?\">\n\t\t\t\t\t\tPaper Wallet is built on top of BIP44 standard. The same\n\t\t\t\t\t\tstandard is used in hardware wallets such as Trezor and\n\t\t\t\t\t\tLedger Nano S. You can use it for Bitcoin, Ethereum,\n\t\t\t\t\t\tLitecoin and other 200+ currencies. Check full list{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://github.com/satoshilabs/slips/blob/master/slip-0044.md\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"nofollow noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\there\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t.\n\t\t\t\t\t</FAQItem>\n\t\t\t\t\t<FAQItem header=\"Where I can check the source code?\">\n\t\t\t\t\t\tYou can check the source code at{\" \"}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\thref=\"https://github.com/HashEx/paperwallet\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"nofollow noopener noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tGitHub\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t.\n\t\t\t\t\t</FAQItem>\n\t\t\t\t\t<FAQItem header=\"Is the website running on the same code?\">\n\t\t\t\t\t\tYes. Our website is hosted on GitHub Pages. So you can\n\t\t\t\t\t\tbe 100% sure that it's running on the same source code\n\t\t\t\t\t\tlocated in our repository.\n\t\t\t\t\t</FAQItem>\n\t\t\t\t\t<FAQItem header=\"How it works?\">\n\t\t\t\t\t\tNow we implement only one redundant encryption algorithm\n\t\t\t\t\t\tbased on XOR binary operation. This algorithm allows to\n\t\t\t\t\t\trestore seed phrase from N - 1 pages, where N is amount\n\t\t\t\t\t\tof pages during splitting.\n\t\t\t\t\t</FAQItem>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default FAQ;\n","export default (string) => {\n\treturn string.split(\" \").map((word) => {\n\t\treturn word.slice(0, 1).toUpperCase() + word.slice(1);\n\t}).join(\" \");\n}","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport toCapitalizeCase from \"../../lib/toCapitalizeCase\";\nimport { calculateWordsPerCard, restoreSeed } from \"../../lib/seedHelpers\";\nimport content from \"../../content\";\n\nimport \"./print.css\";\n\nconst { homepage } = require(\"../../../package.json\");\n\nconst getPageWordName = pageIndex => (item, wordIndex) => {\n\treturn `page${pageIndex + 1}_word#${wordIndex + 1}`;\n};\n\nconst getPageWords = (pageWordCount, index) => {\n\treturn Array.from(Array(pageWordCount)).map(getPageWordName(index)).join(\" \");\n}\n\nconst getPlaceholder = (cardsCount, wordsCount) => {\n\tconst pagesWordsCount = calculateWordsPerCard(wordsCount, cardsCount);\n\treturn pagesWordsCount.map(getPageWords);\n};\n\nconst SheetWordsColumn = ({words, offset}) => (\n\t<div className=\"sheet__words-column\">\n\t\t{words.map((word, index) => (\n\t\t\t<div key={index} className=\"sheet__word\">\n\t\t\t\t<span className=\"sheet__word-number\">\n\t\t\t\t\t{index + offset}\n\t\t\t\t</span>\n\t\t\t\t{\" \"}\n\t\t\t\t{word}\n\t\t\t</div>\n\t\t))}\n\t</div>\n);\n\nconst SheetHeader = ({pageIndex}) => (\n\t<div className=\"sheet__header\">\n\t\t<div className=\"sheet__header-title\">\n\t\t\t{content.title}\n\t\t</div>\n\t\t<div className=\"sheet__header-page\">\n\t\t\t{content.page} #{pageIndex + 1}\n\t\t</div>\n\t</div>\n);\n\nconst SheetWords = ({words}) => (\n\t<div className=\"sheet__words\">\n\t\t<SheetWordsColumn words={words.slice(0, 6)} offset={1} />\n\t\t<SheetWordsColumn words={words.slice(6)} offset={7} />\n\t</div>\n);\n\nclass SheetManual extends React.Component {\n\trenderManualCards = (activeCard, text) => {\n\t\tconst activeCards = sessionStorage.getItem(\"cards_count\");\n\t\tconst wordsCount = sessionStorage.getItem(\"words_count\");\n\t\tconst cards = [];\n\t\tconst seedPagesPlaceholder = getPlaceholder(activeCards, wordsCount);\n\t\tseedPagesPlaceholder[activeCard] = text;\n\t\tfor (let i = 0; i < activeCards; i++) {\n\t\t\tconst cardNum = i + 1;\n\t\t\tconst placeholder = seedPagesPlaceholder[i];\n\t\t\tcards.push(\n\t\t\t\t<div className=\"print-card\" key={i}>\n\t\t\t\t\t<div className=\"print-card__inner\">\n\t\t\t\t\t\t<div className=\"print-card__number\">{toCapitalizeCase(content.page)} {cardNum}</div>\n\t\t\t\t\t\t<div className=\"print-card__text\">\n\t\t\t\t\t\t\t{placeholder.split(\" \").map(item => {\n\t\t\t\t\t\t\t\tconst word = item.split(\"#\");\n\t\t\t\t\t\t\t\tif (word.length > 1) {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class=\"print-card__word\">\n\t\t\t\t\t\t\t\t\t\t\t{word[0]}\n\t\t\t\t\t\t\t\t\t\t\t<span>#</span>\n\t\t\t\t\t\t\t\t\t\t\t{word[1]}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div class=\"print-card__word\">\n\t\t\t\t\t\t\t\t\t\t\t{word[0]}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t\tconst seedPlaceholder = restoreSeed(seedPagesPlaceholder.map(text => text.split(\" \")), wordsCount);\n\t\tconst pageWords = text.trim().split(\" \");\n\t\tconst seed = seedPlaceholder.trim().split(\" \");\n\t\treturn (\n\t\t\t<div className=\"manual__cards\">\n\t\t\t\t<div className=\"manual__cards-title\">{content.doItManually}:</div>\n\t\t\t\t<div className=\"print-cards\">{cards}</div>\n\t\t\t\t<hr className=\"print-splitter\" />\n\t\t\t\t<p className=\"print-seed\">\n\t\t\t\t\t<strong>{content.yourSeed}:</strong>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t{seed.map(item => {\n\t\t\t\t\t\tif (pageWords.indexOf(item) > -1) {\n\t\t\t\t\t\t\treturn <strong>{item}{\" \"}</strong>;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn <span>{item}{\" \"}</span>;\n\t\t\t\t\t})}\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t);\n\t};\n\trender(){\n\t\tconst { cards, pageIndex, card } = this.props;\n\t\tconst isLastCard = cards.length - 1 === pageIndex;\n\t\treturn (\n\t\t\t<div className=\"sheet__manual\">\n\t\t\t\t<div className=\"manual\">\n\t\t\t\t\t<div className=\"manual__text\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t{content.toRecoverYourSeedPhrase}:\n\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t{content.goTo}{\" \"}\n\t\t\t\t\t\t\t<a href={`${homepage}recover`}>\n\t\t\t\t\t\t\t\t<strong>{`${homepage}recover`}</strong>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t{!isLastCard && this.renderManualCards(pageIndex, card.trim())}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nclass Print extends React.Component {\n\tcomponentDidMount() {\n\t\tdocument.getElementsByTagName(\"body\")[0].classList.add(\"A4\");\n\t\tif (typeof window !== \"undefined\") {\n\t\t\twindow.print();\n\t\t}\n\t}\n\tcomponentWillUnmount() {\n\t\tdocument.getElementsByTagName(\"body\")[0].classList.remove(\"A4\");\n\t}\n\trender() {\n\t\tif (typeof sessionStorage === \"undefined\") return null;\n\t\tconst cards = sessionStorage.getItem(\"words\").split(\",\");\n\t\treturn (\n\t\t\t<div className=\"print-container\">\n\t\t\t\t<Helmet>\n\t\t\t\t\t<meta name=\"robots\" content=\"noindex,nofollow\" />\n\t\t\t\t</Helmet>\n\t\t\t\t{cards.map((card, index) => {\n\t\t\t\t\tconst cardWords = card.trim().split(\" \");\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<section className=\"sheet padding-4mm\" key={index}>\n\t\t\t\t\t\t\t<SheetHeader pageIndex={index} />\n\t\t\t\t\t\t\t<SheetWords words={cardWords} />\n\t\t\t\t\t\t\t<SheetManual pageIndex={index} cards={cards} card={card} />\n\t\t\t\t\t\t</section>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Print;\n","import React, { Component } from \"react\";\nimport { withRouter } from \"react-router\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\n\nimport content from \"./content\";\n\nimport Title from \"./components/title\";\nimport Intro from \"./components/intro\";\nimport SeedContainer from \"./components/seedContainer\";\nimport SeedConstructor from \"./components/seedConstructor\";\nimport Footer from \"./components/footer\";\nimport FAQ from \"./components/faq\";\nimport Print from \"./components/print\";\n\nimport \"./App.css\";\n\nconst FAQRoute = () => (\n  <div className=\"container\">\n    <Title />\n    <div className=\"content\">\n      <FAQ />\n    </div>\n  </div>\n);\n\nconst TopWrapper = props => {\n  const showIntro = !props.isRestore && !props.value;\n  const IndexRoute = () => {\n    return (\n      <div className=\"container\">\n        <Title />\n        {showIntro && <Intro />}\n        <SeedContainer {...props} />\n      </div>\n    );\n  };\n  return (\n    <div className=\"top-wrapper\">\n      <div className=\"top\">\n        <Switch>\n          <Route exact path=\"/faq/\" component={FAQRoute} />\n          <Route exact render={IndexRoute} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nconst initialState = {\n  value: \"\"\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n  onResetValue = () => {\n    this.setState({ value: \"\" });\n  };\n  onChange = value => {\n    this.setState({ value });\n  };\n  onRestore = value => {\n    this.setState({ value });\n  };\n  componentWillReceiveProps(nextProps) {\n    if (this.props.location.pathname !== nextProps.location.pathname) {\n      this.onResetValue();\n    }\n  }\n  render() {\n    const { value } = this.state;\n    const isRestore = RegExp(/^\\/recover\\/?/).test(this.props.location.pathname);\n\n    const title = isRestore\n      ? content.pages.restore.title\n      : content.pages.index.title;\n    const IndexRoute = () => (\n      <div>\n        <TopWrapper\n          value={value}\n          isRestore={isRestore}\n          onChange={this.onChange}\n          onResetValue={this.onResetValue}\n        />\n        <SeedConstructor\n          isRestore={isRestore}\n          value={value}\n          onRestore={this.onRestore}\n          onResetValue={this.onResetValue}\n        />\n        <Footer />\n      </div>\n    );\n    return (\n      <div className=\"main\">\n        <Helmet defaultTitle=\"Paper Wallet\" titleTemplate=\"Paper Wallet - %s\">\n          <title>{title}</title>\n          <meta name=\"description\" content={content.pages.index.description} />\n        </Helmet>\n        <Switch>\n          <Route exact path=\"/print/\" component={Print} />\n          <Route render={IndexRoute} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nApp = withRouter(App);\n\nexport default () => (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { hydrate, render } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n    hydrate(<App />, rootElement);\n} else {\n    render(<App />, rootElement);\n}\n//registerServiceWorker();"],"sourceRoot":""}